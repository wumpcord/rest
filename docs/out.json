{
	"id": 0,
	"name": "@wumpcord/rest",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "CDN",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "ImageFormat",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Type alias for what image format Discord supports"
					},
					"sources": [
						{
							"fileName": "src/CDN.ts",
							"line": 13,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "png"
							},
							{
								"type": "literal",
								"value": "jpg"
							},
							{
								"type": "literal",
								"value": "webp"
							},
							{
								"type": "literal",
								"value": "gif"
							}
						]
					}
				},
				{
					"id": 4,
					"name": "ImageSize",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Type alias of what image sizes Discord supports"
					},
					"sources": [
						{
							"fileName": "src/CDN.ts",
							"line": 22,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": 16
							},
							{
								"type": "literal",
								"value": 32
							},
							{
								"type": "literal",
								"value": 64
							},
							{
								"type": "literal",
								"value": 128
							},
							{
								"type": "literal",
								"value": 265
							},
							{
								"type": "literal",
								"value": 512
							},
							{
								"type": "literal",
								"value": 1024
							},
							{
								"type": "literal",
								"value": 2048
							},
							{
								"type": "literal",
								"value": 4096
							}
						]
					}
				},
				{
					"id": 2,
					"name": "BaseUrl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "The base URL for pointing to the CDN"
					},
					"sources": [
						{
							"fileName": "src/CDN.ts",
							"line": 8,
							"character": 20
						}
					],
					"type": {
						"type": "literal",
						"value": "https://cdn.discordapp.com"
					},
					"defaultValue": "'https://cdn.discordapp.com'"
				},
				{
					"id": 5,
					"name": "getAchivementIcon",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/CDN.ts",
							"line": 24,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 6,
							"name": "getAchivementIcon",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 7,
									"name": "appID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8,
									"name": "achivementID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9,
									"name": "icon",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 10,
					"name": "getApplicationAsset",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/CDN.ts",
							"line": 25,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 11,
							"name": "getApplicationAsset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 12,
									"name": "appID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13,
									"name": "asset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 14,
					"name": "getApplicationIcon",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/CDN.ts",
							"line": 26,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 15,
							"name": "getApplicationIcon",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 16,
									"name": "appID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 17,
									"name": "icon",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 18,
					"name": "getChannelIcon",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/CDN.ts",
							"line": 27,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 19,
							"name": "getChannelIcon",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 20,
									"name": "channelID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21,
									"name": "icon",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 22,
					"name": "getCustomEmoji",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/CDN.ts",
							"line": 28,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 23,
							"name": "getCustomEmoji",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 24,
									"name": "emojiID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 25,
					"name": "getDefaultUserAvatar",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/CDN.ts",
							"line": 29,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 26,
							"name": "getDefaultUserAvatar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 27,
									"name": "discrim",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 28,
									"name": "format",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3,
										"name": "ImageFormat"
									},
									"defaultValue": "'png'"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 29,
					"name": "getGuildBanner",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/CDN.ts",
							"line": 30,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 30,
							"name": "getGuildBanner",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 31,
									"name": "guildID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32,
									"name": "banner",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 33,
					"name": "getGuildDiscoverySplash",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/CDN.ts",
							"line": 31,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 34,
							"name": "getGuildDiscoverySplash",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 35,
									"name": "guildID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 36,
									"name": "splash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 37,
					"name": "getGuildIcon",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/CDN.ts",
							"line": 32,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 38,
							"name": "getGuildIcon",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 39,
									"name": "guildID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 40,
									"name": "icon",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 41,
					"name": "getGuildSplash",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/CDN.ts",
							"line": 33,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 42,
							"name": "getGuildSplash",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 43,
									"name": "guildID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 44,
									"name": "splash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 45,
					"name": "getTeamIcon",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/CDN.ts",
							"line": 34,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 46,
							"name": "getTeamIcon",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 47,
									"name": "teamID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 48,
									"name": "icon",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 49,
					"name": "getUserAvatar",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/CDN.ts",
							"line": 35,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 50,
							"name": "getUserAvatar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 51,
									"name": "userID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 52,
									"name": "avatar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 53,
									"name": "format",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3,
										"name": "ImageFormat"
									},
									"defaultValue": "'png'"
								},
								{
									"id": 54,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4,
										"name": "ImageSize"
									},
									"defaultValue": "1024"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3,
						4
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						5,
						10,
						14,
						18,
						22,
						25,
						29,
						33,
						37,
						41,
						45,
						49
					]
				}
			],
			"sources": [
				{
					"fileName": "src/CDN.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 55,
			"name": "Constants",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"shortText": "Copyright (c) 2021 August",
				"text": "Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
			},
			"children": [
				{
					"id": 56,
					"name": "RestVersion",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "The rest version for requesting to Discord"
					},
					"sources": [
						{
							"fileName": "src/Constants.ts",
							"line": 26,
							"character": 24
						}
					],
					"type": {
						"type": "literal",
						"value": 9
					},
					"defaultValue": "9"
				},
				{
					"id": 60,
					"name": "SupportedVersions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "The supported rest versions"
					},
					"sources": [
						{
							"fileName": "src/Constants.ts",
							"line": 37,
							"character": 30
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 57,
					"name": "APIUrl",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/Constants.ts",
							"line": 32,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 58,
							"name": "APIUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the API url for creating requests towards Discord.\nIf you want to override this, use the [[RestClientOptions.baseURL]] option."
							},
							"parameters": [
								{
									"id": 59,
									"name": "version",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						56,
						60
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						57
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Constants.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 169,
			"name": "RestClient",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 203,
					"name": "RestClient",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The rest client to create requests to Discord"
					},
					"children": [
						{
							"id": 204,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 205,
									"name": "new RestClient",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "The rest client to create requests to Discord"
									},
									"parameters": [
										{
											"id": 206,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Any additional options to create this RestClient\n"
											},
											"type": {
												"type": "reference",
												"id": 170,
												"name": "RestClientOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 203,
										"name": "RestClient"
									},
									"overwrites": {
										"type": "reference",
										"name": "EventBus<RestClientEvents>.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "EventBus<RestClientEvents>.constructor"
							}
						},
						{
							"id": 211,
							"name": "clsToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Represents the current cancellation token list"
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 170,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 274,
								"name": "CancellationTokens"
							},
							"defaultValue": "..."
						},
						{
							"id": 210,
							"name": "lastDispatchAt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Milliseconds timestamp when we called [[RestClient.dispatch]]"
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 165,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 209,
							"name": "lastRequestedAt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Millisecond timestamp when we received a request from Discord"
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 160,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 213,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "List of options available"
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 180,
									"character": 16
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 170,
														"name": "RestClientOptions"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "token"
															},
															{
																"type": "literal",
																"value": "agent"
															}
														]
													}
												],
												"name": "Omit"
											}
										],
										"name": "Required"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 214,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 216,
													"name": "agent",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/RestClient.ts",
															"line": 180,
															"character": 102
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"name": "Agent"
															}
														]
													}
												},
												{
													"id": 215,
													"name": "token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/RestClient.ts",
															"line": 180,
															"character": 80
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														216,
														215
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 212,
							"name": "routes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "List of routes available for ratelimiting"
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 175,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 287,
										"name": "RouteBucket"
									}
								],
								"name": "Collection"
							}
						},
						{
							"id": 218,
							"name": "ping",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 214,
									"character": 10
								}
							],
							"getSignature": [
								{
									"id": 219,
									"name": "ping",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 262,
							"name": "addListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@augu/utils/index.d.ts",
									"line": 423,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 263,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"tags": [
											{
												"tag": "inheritdoc",
												"text": "\n"
											}
										]
									},
									"typeParameter": [
										{
											"id": 264,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 187,
													"name": "RestClientEvents"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 265,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										},
										{
											"id": 266,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 187,
													"name": "RestClientEvents"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 203,
										"name": "RestClient"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventBus.addListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventBus.addListener"
							}
						},
						{
							"id": 220,
							"name": "dispatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 220,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 221,
									"name": "dispatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 222,
											"name": "D",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 223,
											"name": "TReturn",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 224,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 175,
												"typeArguments": [
													{
														"type": "reference",
														"name": "D"
													}
												],
												"name": "RequestDispatchOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"name": "TReturn"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 232,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@augu/utils/index.d.ts",
									"line": 364,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 233,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Emits a new event from the callstack",
										"returns": "A boolean value if it exists or not\n"
									},
									"typeParameter": [
										{
											"id": 234,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 187,
													"name": "RestClientEvents"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 235,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"text": "The event to emit"
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										},
										{
											"id": 236,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"text": "Any additional arguments to push"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"name": "K"
														},
														"objectType": {
															"type": "reference",
															"id": 187,
															"name": "RestClientEvents"
														}
													}
												],
												"name": "ListenerArgs"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventBus.emit"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventBus.emit"
							}
						},
						{
							"id": 240,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@augu/utils/index.d.ts",
									"line": 383,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 241,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Pushes a new event to the callstack",
										"returns": "This instance to chain methods\n"
									},
									"typeParameter": [
										{
											"id": 242,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 187,
													"name": "RestClientEvents"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 243,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"text": "The event to push"
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										},
										{
											"id": 244,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"text": "The listener function"
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 187,
													"name": "RestClientEvents"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 203,
										"name": "RestClient"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventBus.on"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventBus.on"
							}
						},
						{
							"id": 245,
							"name": "once",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@augu/utils/index.d.ts",
									"line": 393,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 246,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Pushes a new event to the callstack and removes it after\nit has been emitted from the parent component.",
										"returns": "This instance to chain methods\n"
									},
									"typeParameter": [
										{
											"id": 247,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 187,
													"name": "RestClientEvents"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 248,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"text": "The event to push"
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										},
										{
											"id": 249,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"text": "The listener function"
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 187,
													"name": "RestClientEvents"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 203,
										"name": "RestClient"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventBus.once"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventBus.once"
							}
						},
						{
							"id": 260,
							"name": "removeAllListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@augu/utils/index.d.ts",
									"line": 418,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 261,
									"name": "removeAllListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Removes all listeners from this EventBus component"
									},
									"type": {
										"type": "reference",
										"id": 203,
										"name": "RestClient"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventBus.removeAllListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventBus.removeAllListeners"
							}
						},
						{
							"id": 250,
							"name": "removeListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@augu/utils/index.d.ts",
									"line": 401,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 251,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Pushes a event's specific listener from the callstack.",
										"returns": "This instance to chain methods\n"
									},
									"typeParameter": [
										{
											"id": 252,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 187,
													"name": "RestClientEvents"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 253,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"text": "The event to remove"
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										},
										{
											"id": 254,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"text": "The listener callback function"
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"name": "K"
												},
												"objectType": {
													"type": "reference",
													"id": 187,
													"name": "RestClientEvents"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventBus.removeListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventBus.removeListener"
							}
						},
						{
							"id": 237,
							"name": "setMaxListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@augu/utils/index.d.ts",
									"line": 374,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 238,
									"name": "setMaxListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Sets the maximum amount of listeners to append",
										"returns": "This instance to chain methods\n"
									},
									"parameters": [
										{
											"id": 239,
											"name": "count",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"text": "The max size to use, If value `-1` is used, it'll\nbe infinite and might lead to callstack errors.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 203,
										"name": "RestClient"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventBus.setMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventBus.setMaxListeners"
							}
						},
						{
							"id": 255,
							"name": "size",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@augu/utils/index.d.ts",
									"line": 408,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 256,
									"name": "size",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns how many listeners a event has",
										"returns": "A number of how many concurrent listeners are in\n"
									},
									"typeParameter": [
										{
											"id": 257,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 187,
													"name": "RestClientEvents"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 258,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"text": "The event to lookup"
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventBus.size"
									}
								},
								{
									"id": 259,
									"name": "size",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns how many events are in this EventBus component"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "EventBus.size"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "EventBus.size"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								204
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								211,
								210,
								209,
								213,
								212
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								218
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								262,
								220,
								232,
								240,
								245,
								260,
								250,
								237,
								255
							]
						}
					],
					"sources": [
						{
							"fileName": "src/RestClient.ts",
							"line": 153,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 187,
									"name": "RestClientEvents"
								}
							],
							"name": "EventBus"
						}
					]
				},
				{
					"id": 184,
					"name": "MessageFile",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Represents a file to send on Discord"
					},
					"children": [
						{
							"id": 186,
							"name": "file",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The file contents to send"
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 115,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						},
						{
							"id": 185,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the file",
								"tags": [
									{
										"tag": "default",
										"text": "'file.png'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 110,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								186,
								185
							]
						}
					],
					"sources": [
						{
							"fileName": "src/RestClient.ts",
							"line": 105,
							"character": 28
						}
					]
				},
				{
					"id": 175,
					"name": "RequestDispatchOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Dispatch options for dispatching a request ([[RestClient.dispatch]])"
					},
					"children": [
						{
							"id": 176,
							"name": "auditLogReason",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The reason to put under audit logs"
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 68,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 181,
							"name": "auth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If this requires authenication"
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 93,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 182,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The data supplied to create this request. GET requests\ndo not support supplying in data."
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 99,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "D"
							}
						},
						{
							"id": 177,
							"name": "endpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The endpoint to use when creating this request"
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 73,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 180,
							"name": "file",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The file to send to Discord"
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 88,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 184,
								"name": "MessageFile"
							}
						},
						{
							"id": 178,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The HTTP/1.1 method verb to use"
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 78,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "HttpMethod"
							}
						},
						{
							"id": 179,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The path parameters to use in the [[RequestDispatch<D>.endpoint]]."
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 83,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								176,
								181,
								182,
								177,
								180,
								178,
								179
							]
						}
					],
					"sources": [
						{
							"fileName": "src/RestClient.ts",
							"line": 64,
							"character": 39
						}
					],
					"typeParameter": [
						{
							"id": 183,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 196,
					"name": "RestCallProperties",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Represents a object of properties of this request"
					},
					"children": [
						{
							"id": 201,
							"name": "body",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 146,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 198,
							"name": "endpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 143,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 199,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 144,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "HttpMethod"
							}
						},
						{
							"id": 202,
							"name": "ping",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 147,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 197,
							"name": "ratelimited",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 142,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 200,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 145,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								201,
								198,
								199,
								202,
								197,
								200
							]
						}
					],
					"sources": [
						{
							"fileName": "src/RestClient.ts",
							"line": 141,
							"character": 35
						}
					]
				},
				{
					"id": 187,
					"name": "RestClientEvents",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 193,
							"name": "call",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 194,
									"name": "call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Emitted when the rest client has successfully made a request"
									},
									"parameters": [
										{
											"id": 195,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The properties from the request\n"
											},
											"type": {
												"type": "reference",
												"id": 196,
												"name": "RestCallProperties"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 190,
							"name": "debug",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 191,
									"name": "debug",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Emitted when the rest client sends something debug worthy"
									},
									"parameters": [
										{
											"id": 192,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The message\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 188,
							"name": "ratelimited",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 189,
									"name": "ratelimited",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Emitted when the rest client is ratelimited"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								193,
								190,
								188
							]
						}
					],
					"sources": [
						{
							"fileName": "src/RestClient.ts",
							"line": 118,
							"character": 33
						}
					]
				},
				{
					"id": 170,
					"name": "RestClientOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Rest client options to override"
					},
					"children": [
						{
							"id": 173,
							"name": "agent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specific undici agent to use, it'll default to orchid's agent if this isn't\nset."
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 53,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Agent"
							}
						},
						{
							"id": 172,
							"name": "baseUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The base URL"
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 47,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 171,
							"name": "restVersion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Overrides the REST version for this [[RestClient]]"
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 42,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": 9
									},
									{
										"type": "literal",
										"value": 8
									}
								]
							}
						},
						{
							"id": 174,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The token to use for this [[RestClient]]"
							},
							"sources": [
								{
									"fileName": "src/RestClient.ts",
									"line": 58,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								173,
								172,
								171,
								174
							]
						}
					],
					"sources": [
						{
							"fileName": "src/RestClient.ts",
							"line": 38,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						203
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						184,
						175,
						196,
						187,
						170
					]
				}
			],
			"sources": [
				{
					"fileName": "src/RestClient.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 61,
			"name": "errors/DiscordAPIError",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"shortText": "Copyright (c) 2021 August",
				"text": "Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
			},
			"children": [
				{
					"id": 62,
					"name": "DiscordAPIError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Represents a error related to Discord's API"
					},
					"children": [
						{
							"id": 73,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 74,
									"name": "new DiscordAPIError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new [DiscordAPIError] instance"
									},
									"parameters": [
										{
											"id": 75,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The code Discord gave us"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 76,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The actual message\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 62,
										"name": "DiscordAPIError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 78,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 974,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 77,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 973,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 79,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 975,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 67,
							"name": "prepareStackTrace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional override for formatting stack traces",
								"tags": [
									{
										"tag": "see",
										"text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 11,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 68,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 69,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 70,
													"name": "err",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Error"
													}
												},
												{
													"id": 71,
													"name": "stackTraces",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "CallSite"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						},
						{
							"id": 72,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 13,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 63,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 64,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 65,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 66,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								73
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								78,
								77,
								79,
								67,
								72
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								63
							]
						}
					],
					"sources": [
						{
							"fileName": "src/errors/DiscordAPIError.ts",
							"line": 26,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Error"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						62
					]
				}
			],
			"sources": [
				{
					"fileName": "src/errors/DiscordAPIError.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 80,
			"name": "errors/DiscordRestError",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"shortText": "Copyright (c) 2021 August",
				"text": "Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
			},
			"children": [
				{
					"id": 81,
					"name": "DiscordRestError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Represents a REST error when we receive a non-200 status code."
					},
					"children": [
						{
							"id": 92,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 93,
									"name": "new DiscordRestError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Represents a REST error when we receive a non-200 status code."
									},
									"parameters": [
										{
											"id": 94,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The code Discord gave us"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 95,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The message Discord gave us"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 96,
											"name": "errors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Any validation errors that may-of occured\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 81,
										"name": "DiscordRestError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 98,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "The response code Discord gave us"
							},
							"sources": [
								{
									"fileName": "src/errors/DiscordRestError.ts",
									"line": 42,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 97,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "List of validation errors, if any"
							},
							"sources": [
								{
									"fileName": "src/errors/DiscordRestError.ts",
									"line": 37,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 100,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 974,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 99,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 973,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 101,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 975,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 86,
							"name": "prepareStackTrace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional override for formatting stack traces",
								"tags": [
									{
										"tag": "see",
										"text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 11,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 87,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 88,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 89,
													"name": "err",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Error"
													}
												},
												{
													"id": 90,
													"name": "stackTraces",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "CallSite"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						},
						{
							"id": 91,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 13,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 82,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 83,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 84,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 85,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								92
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								98,
								97,
								100,
								99,
								101,
								86,
								91
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								82
							]
						}
					],
					"sources": [
						{
							"fileName": "src/errors/DiscordRestError.ts",
							"line": 33,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Error"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						81
					]
				}
			],
			"sources": [
				{
					"fileName": "src/errors/DiscordRestError.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 102,
			"name": "index",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 305,
					"name": "Constants",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 42,
							"character": 21
						}
					],
					"target": 55
				},
				{
					"id": 307,
					"name": "DiscordAPIError",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 62
				},
				{
					"id": 306,
					"name": "DiscordRestError",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 81
				},
				{
					"id": 303,
					"name": "ImageFormat",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 41,
							"character": 20
						}
					],
					"target": 3
				},
				{
					"id": 304,
					"name": "ImageSize",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 41,
							"character": 31
						}
					],
					"target": 4
				},
				{
					"id": 310,
					"name": "MessageFile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 184
				},
				{
					"id": 309,
					"name": "RequestDispatchOptions",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 175
				},
				{
					"id": 312,
					"name": "RestCallProperties",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 196
				},
				{
					"id": 313,
					"name": "RestClient",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 203
				},
				{
					"id": 311,
					"name": "RestClientEvents",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 187
				},
				{
					"id": 308,
					"name": "RestClientOptions",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 170
				},
				{
					"id": 104,
					"name": "CDN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 48,
							"character": 16
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 105,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 168,
									"name": "BaseUrl",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 106,
									"name": "getAchivementIcon",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 107,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 108,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 109,
															"name": "appID",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 110,
															"name": "achivementID",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 111,
															"name": "icon",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 117,
									"name": "getApplicationAsset",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 118,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 119,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 120,
															"name": "appID",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 121,
															"name": "asset",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 112,
									"name": "getApplicationIcon",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 113,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 114,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 115,
															"name": "appID",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 116,
															"name": "icon",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 122,
									"name": "getChannelIcon",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 123,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 124,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 125,
															"name": "channelID",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 126,
															"name": "icon",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 127,
									"name": "getCustomEmoji",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 128,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 129,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 130,
															"name": "emojiID",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 131,
									"name": "getDefaultUserAvatar",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 132,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 133,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 134,
															"name": "discrim",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 135,
															"name": "format",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 3,
																"name": "ImageFormat"
															},
															"defaultValue": "'png'"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 136,
									"name": "getGuildBanner",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 137,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 138,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 139,
															"name": "guildID",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 140,
															"name": "banner",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 141,
									"name": "getGuildDiscoverySplash",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 142,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 143,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 144,
															"name": "guildID",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 145,
															"name": "splash",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 146,
									"name": "getGuildIcon",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 147,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 148,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 149,
															"name": "guildID",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 150,
															"name": "icon",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 151,
									"name": "getGuildSplash",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 152,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 153,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 154,
															"name": "guildID",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 155,
															"name": "splash",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 156,
									"name": "getTeamIcon",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 157,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 158,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 159,
															"name": "teamID",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 160,
															"name": "icon",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 161,
									"name": "getUserAvatar",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 162,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 163,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 164,
															"name": "userID",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 165,
															"name": "avatar",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 166,
															"name": "format",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 3,
																"name": "ImageFormat"
															},
															"defaultValue": "'png'"
														},
														{
															"id": 167,
															"name": "size",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 4,
																"name": "ImageSize"
															},
															"defaultValue": "1024"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										168,
										106,
										117,
										112,
										122,
										127,
										131,
										136,
										141,
										146,
										151,
										156,
										161
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 103,
					"name": "version",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 47,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						305,
						307,
						306,
						303,
						304,
						310,
						309,
						312,
						313,
						311,
						308
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						104,
						103
					]
				}
			],
			"sources": [
				{
					"fileName": "src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 267,
			"name": "sequential/CancellationToken",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"shortText": "Copyright (c) 2021 August",
				"text": "Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
			},
			"children": [
				{
					"id": 274,
					"name": "CancellationTokens",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Represents a list of cancellation tokens"
					},
					"children": [
						{
							"id": 275,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 276,
									"name": "new CancellationTokens",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 274,
										"name": "CancellationTokens"
									}
								}
							]
						},
						{
							"id": 278,
							"name": "remaining",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Checks if this bucket of tokens has remaning tokens left"
							},
							"sources": [
								{
									"fileName": "src/sequential/CancellationToken.ts",
									"line": 48,
									"character": 15
								}
							],
							"getSignature": [
								{
									"id": 279,
									"name": "remaining",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if this bucket of tokens has remaning tokens left"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 282,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/sequential/CancellationToken.ts",
									"line": 68,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 283,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs the last token available to this context"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 280,
							"name": "run",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/sequential/CancellationToken.ts",
									"line": 56,
									"character": 5
								}
							],
							"signatures": [
								{
									"id": 281,
									"name": "run",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs all the cancellation tokens and if there is none left,\nresolves this method with nothing."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								275
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								278
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								282,
								280
							]
						}
					],
					"sources": [
						{
							"fileName": "src/sequential/CancellationToken.ts",
							"line": 41,
							"character": 31
						}
					]
				},
				{
					"id": 268,
					"name": "CancellationToken",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Represents a token to cancel an asynchronous action"
					},
					"children": [
						{
							"id": 272,
							"name": "promise",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The promise for this [[CancellationToken]]"
							},
							"sources": [
								{
									"fileName": "src/sequential/CancellationToken.ts",
									"line": 35,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "Promise"
							}
						},
						{
							"id": 269,
							"name": "resolve",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 270,
									"name": "resolve",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Resolves this [[CancellationToken]]"
									},
									"parameters": [
										{
											"id": 271,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								272
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								269
							]
						}
					],
					"sources": [
						{
							"fileName": "src/sequential/CancellationToken.ts",
							"line": 26,
							"character": 34
						}
					],
					"typeParameter": [
						{
							"id": 273,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						274
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						268
					]
				}
			],
			"sources": [
				{
					"fileName": "src/sequential/CancellationToken.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 286,
			"name": "sequential/RouteBucket",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 287,
					"name": "RouteBucket",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Represents a ratelimit buckets for specific routes"
					},
					"children": [
						{
							"id": 289,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 290,
									"name": "new RouteBucket",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Represents a ratelimit buckets for specific routes"
									},
									"parameters": [
										{
											"id": 291,
											"name": "route",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The route this [`RouteBucket`] belongs to\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 287,
										"name": "RouteBucket"
									}
								}
							]
						},
						{
							"id": 294,
							"name": "remaining",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "The remaining times before we reach a 429 status"
							},
							"sources": [
								{
									"fileName": "src/sequential/RouteBucket.ts",
									"line": 48,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 293,
							"name": "resetTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "The reset time for ratelimiting purposes"
							},
							"sources": [
								{
									"fileName": "src/sequential/RouteBucket.ts",
									"line": 43,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 292,
							"name": "route",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isReadonly": true
							},
							"comment": {
								"shortText": "The route this [`RouteBucket`] belongs to"
							},
							"sources": [
								{
									"fileName": "src/sequential/RouteBucket.ts",
									"line": 38,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 288,
							"name": "globalRatelimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"comment": {
								"shortText": "The global ratelimit promise"
							},
							"sources": [
								{
									"fileName": "src/sequential/RouteBucket.ts",
									"line": 33,
									"character": 31
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								]
							},
							"defaultValue": "null"
						},
						{
							"id": 295,
							"name": "ratelimited",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "If this [`RouteBucket`] has been ratelimited or not"
							},
							"sources": [
								{
									"fileName": "src/sequential/RouteBucket.ts",
									"line": 63,
									"character": 17
								}
							],
							"getSignature": [
								{
									"id": 296,
									"name": "ratelimited",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "If this [`RouteBucket`] has been ratelimited or not"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 297,
							"name": "getOffset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/sequential/RouteBucket.ts",
									"line": 71,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 298,
									"name": "getOffset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the offset given by Discord's server date and our server date"
									},
									"parameters": [
										{
											"id": 299,
											"name": "serverDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The date in milliseconds Discord has gaven us\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 300,
							"name": "handle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/sequential/RouteBucket.ts",
									"line": 79,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 301,
									"name": "handle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Handles the ratelimiting for this [`RouteBucket`]"
									},
									"parameters": [
										{
											"id": 302,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The orchid response\n"
											},
											"type": {
												"type": "reference",
												"name": "Response"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								289
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								294,
								293,
								292,
								288
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								295
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								297,
								300
							]
						}
					],
					"sources": [
						{
							"fileName": "src/sequential/RouteBucket.ts",
							"line": 29,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						287
					]
				}
			],
			"sources": [
				{
					"fileName": "src/sequential/RouteBucket.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				1,
				55,
				169,
				61,
				80,
				102,
				267,
				286
			]
		}
	]
}